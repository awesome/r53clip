#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'

if RUBY_ENGINE == 'ruby' and ENV['RUBY_THREAD_MACHINE_STACK_SIZE'].to_i < 1572864 then
	ENV['RUBY_THREAD_MACHINE_STACK_SIZE'] = '1572864'
	exec('ruby', $0, *ARGV)
end

$:.unshift(File.expand_path('../../lib', File.realpath(__FILE__)))

command = ARGV[0].to_sym

config_path = ARGV[1]
config_path = '/etc/r53clip.yaml' if !config_path and File.exists?('/etc/r53clip')
config_path = File.expand_path('../../r53clip.yaml', __FILE__) if !config_path and File.exists?(File.expand_path('../../r53clip.yaml', __FILE__))

abort "Invalid config file" if !config_path or !File.exists?(config_path)

require 'r53clip'

if command == :start then
	Signal.trap('INT') { exit(0) }
	Signal.trap('TERM') { exit(0) }
	begin
		r53 = R53clip.new(config_path)
		r53.start
		r53.cc.dispatch_thread.join
	ensure
		r53.stop(true)
	end
elsif command == :status
	healthy = true
	data = R53clip.new(config_path).status
	data.each do |record_name, record_ips|
		puts ""
		puts "#{record_name}:"
		puts "  Local IP: #{record_ips[0]}"
		puts "  Active IPs: #{record_ips[1].join(' ')}"
		healthy = false if !record_ips[1].include?(record_ips[0])
	end
	exit 0 if healthy
	exit 1
else
	raise ArgumentError, "Unknown command #{command}"
end
